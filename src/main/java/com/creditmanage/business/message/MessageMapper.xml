<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.creditmanage.business.message.MessageMapper">
    <parameterMap id="paramMap" type="com.creditmanage.business.message.Message"/>
    <resultMap id="resultMap" type="com.creditmanage.business.message.Message"/>
    <sql id="selectAll">
        select
            t1.id                                           as id,
            date_format(t1.created_at, '%Y-%m-%d %H:%i:%S') as createdAt,
            date_format(t1.updated_at, '%Y-%m-%d %H:%i:%S') as updatedAt,
            t1.receive_id                                   as receiveId,
            t2.name                                         as name,
            t2.username                                     as username,
            t1.send_id                                      as sendId,
            t1.info                                         as info
    </sql>
    <sql id="fromAll">
        from message t1
        left join user t2 on t1.send_id =t2.id
    </sql>
    <sql id="whereAll">
        <foreach collection="query.filters" open="where 1=1 " item="item">
            ${item.getFilterSql()}
        </foreach>
    </sql>
    <sql id="orderAll">
        <!--<if test="query.orders.size()>0">-->
        <foreach collection="query.orders" open="order by" item="item" separator=",">
            ${item.field} ${item.orderVal()}
        </foreach>
        <!--</if>-->
    </sql>

    <select id="queryOne" resultMap="resultMap" parameterMap="paramMap">
        <include refid="selectAll"/>
        <include refid="fromAll"/>
    </select>

    <select id="queryAll" resultMap="resultMap" parameterMap="paramMap">
        select * from (
        <include refid="selectAll"/>
        <include refid="fromAll"/>
        ) as temp
        <include refid="whereAll"/>
        <include refid="orderAll"/>
    </select>

    <select id="queryPage" resultMap="resultMap" parameterMap="paramMap">
        select * from (
        <include refid="selectAll"/>
        <include refid="fromAll"/>
        ) as temp
        <include refid="whereAll"/>
        <include refid="orderAll"/>
        limit ${(query.page-1)*query.pageSize},${query.pageSize}
    </select>

    <select id="queryCount" resultType="java.lang.Integer" parameterMap="paramMap">
        select count(1) from (
        <include refid="selectAll"/>
        <include refid="fromAll"/>
        ) as temp
        <include refid="whereAll"/>
    </select>

    <insert id="insert" parameterMap="paramMap">
        insert into message
        (created_at, updated_at, receive_id, send_id, info)
        values
            ( now(), now(), #{receiveId}, #{sendId}, #{info})
    </insert>
    <update id="update" parameterMap="paramMap">
        update message
        <set>
            updated_at = now(),
            <if test="receiveId !=null and receiveId !=''">student_id = #{receiveId},</if>
            <if test="sendId !=null and sendId !=''">teacher_id = #{sendId},</if>
            <if test="info !=null and info !=''">info = #{info},</if>
        </set>
        where id = #{id}
    </update>
    <delete id="delete" parameterMap="paramMap">
        delete from message
        where id = #{id}
    </delete>
</mapper>