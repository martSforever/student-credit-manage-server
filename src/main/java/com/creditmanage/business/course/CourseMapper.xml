<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.creditmanage.business.course.CourseMapper">

    <parameterMap id="paramMap" type="com.creditmanage.business.course.Course"/>
    <resultMap id="resultMap" type="com.creditmanage.business.course.Course"/>

    <sql id="selectAll">
        <trim suffixOverrides=",">
            select
            t1.id as id,
            date_format(t1.created_at, '%Y-%m-%d %H:%i:%S') as createdAt,
            date_format(t1.updated_at, '%Y-%m-%d %H:%i:%S') as updatedAt,

            t1.name as name,
            t1.teacher_id as teacherId,

            t2.name as teacherName,

            <if test="attr1 !=null  and attr1 == 'courseScore'">
                (select sum(s1.score)
                from stu_score s1
                where s1.course_id = t1.id and s1.score <![CDATA[>]]> 0) as increaseScore,
                (select sum(s1.score)
                from stu_score s1
                where s1.course_id = t1.id and s1.score <![CDATA[<]]> 0) as decreaseScore,
            </if>

        </trim>
    </sql>
    <sql id="fromAll">
        from course t1
        left join user t2 on t1.teacher_id = t2.id
    </sql>
    <sql id="whereAll">
        <foreach collection="query.filters" open="where 1=1 " item="item">
            ${item.getFilterSql()}
        </foreach>
    </sql>
    <sql id="orderAll">
        <!--<if test="query.orders.size()>0">-->
        <foreach collection="query.orders" open="order by" item="item" separator=",">
            ${item.field} ${item.orderVal()}
        </foreach>
        <!--</if>-->
    </sql>

    <select id="queryOne" resultMap="resultMap" parameterMap="paramMap">
        <include refid="selectAll"/>
        <include refid="fromAll"/>
        where t1.id = #{id}
    </select>

    <select id="queryAll" resultMap="resultMap" parameterMap="paramMap">
        select * from (
        <include refid="selectAll"/>
        <include refid="fromAll"/>
        ) as temp
        <include refid="whereAll"/>
        <include refid="orderAll"/>
    </select>

    <select id="queryPage" resultMap="resultMap" parameterMap="paramMap">
        select * from (
        <include refid="selectAll"/>
        <include refid="fromAll"/>
        ) as temp
        <include refid="whereAll"/>
        <include refid="orderAll"/>
        limit ${(query.page-1)*query.pageSize},${query.pageSize}
    </select>

    <select id="queryCount" resultType="java.lang.Integer" parameterMap="paramMap">
        select count(1) from (
        <include refid="selectAll"/>
        <include refid="fromAll"/>
        ) as temp
        <include refid="whereAll"/>
    </select>

    <insert id="insert" parameterMap="paramMap">
        insert into course
        (id, created_at, updated_at, name, teacher_id)
        values
            (#{id}, now(), now(), #{name}, #{teacherId})
    </insert>

    <update id="update" parameterMap="paramMap">
        update course
        <set>
            updated_at = now(),
            <if test="name !=null and name !=''">name = #{name},</if>
            <if test="teacherId !=null and teacherId !=''">teacher_id = #{teacherId},</if>
        </set>
        where id = #{id}
    </update>
    <delete id="delete" parameterMap="paramMap">
        delete from course
        where id = #{id}
    </delete>

</mapper>