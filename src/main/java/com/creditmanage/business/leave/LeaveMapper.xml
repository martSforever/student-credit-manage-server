<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.creditmanage.business.leave.LeaveMapper">

    <parameterMap id="paramMap" type="com.creditmanage.business.leave.Leave"/>
    <resultMap id="resultMap" type="com.creditmanage.business.leave.Leave"/>

    <sql id="selectAll">
        select
            t1.id                                           as id,
            date_format(t1.created_at, '%Y-%m-%d %H:%i:%S') as createdAt,
            date_format(t1.updated_at, '%Y-%m-%d %H:%i:%S') as updatedAt,

            t1.student_id                                   as studentId,
            t1.reason                                       as reason,
            date_format(t1.start_time, '%Y-%m-%d %H:%i:%S') as startTime,
            date_format(t1.end_time, '%Y-%m-%d %H:%i:%S')   as endTime,
            t1.audit_teacher_id                             as auditTeacherId,
            t1.audit_status                                 as auditStatus,
            t1.audit_result                                 as auditResult,
            date_format(t1.audit_time, '%Y-%m-%d %H:%i:%S') as auditTime,
            t1.other_reason                                 as otherReason,
            t1.audit_comment                                as auditComment,

            t2.name                                         as studentName,
            t3.name                                         as teacherName,
            concat(t4.grade, '级', t4.cls, '班')              as className

    </sql>
    <sql id="fromAll">
        from stu_leave t1
        left join user t2 on t1.student_id = t2.id
        left join user t3 on t1.audit_teacher_id = t3.id
        left join cls t4 on t2.class_id = t4.id
    </sql>
    <sql id="whereAll">
        <foreach collection="query.filters" open="where 1=1 " item="item">
            ${item.getFilterSql()}
        </foreach>
    </sql>
    <sql id="orderAll">
        <!--<if test="query.orders.size()>0">-->
        <foreach collection="query.orders" open="order by" item="item" separator=",">
            ${item.field} ${item.orderVal()}
        </foreach>
        <!--</if>-->
    </sql>

    <select id="queryOne" resultMap="resultMap" parameterMap="paramMap">
        <include refid="selectAll"/>
        <include refid="fromAll"/>
        where t1.id = #{id}
    </select>

    <select id="queryAll" resultMap="resultMap" parameterMap="paramMap">
        select * from (
        <include refid="selectAll"/>
        <include refid="fromAll"/>
        ) as temp
        <include refid="whereAll"/>
        <include refid="orderAll"/>
    </select>

    <select id="queryPage" resultMap="resultMap" parameterMap="paramMap">
        select * from (
        <include refid="selectAll"/>
        <include refid="fromAll"/>
        ) as temp
        <include refid="whereAll"/>
        <include refid="orderAll"/>
        limit ${(query.page-1)*query.pageSize},${query.pageSize}
    </select>

    <select id="queryCount" resultType="java.lang.Integer" parameterMap="paramMap">
        select count(1) from (
        <include refid="selectAll"/>
        <include refid="fromAll"/>
        ) as temp
        <include refid="whereAll"/>
    </select>

    <insert id="insert" parameterMap="paramMap">
        insert into stu_leave
        (id, created_at, updated_at, student_id, reason, start_time, end_time, audit_teacher_id, audit_status, audit_result, audit_time, other_reason, audit_comment)
        values
            (#{id}, now(), now(), #{studentId}, #{reason}, #{startTime}, #{endTime}, #{auditTeacherId}, #{auditStatus}, #{auditResult}, #{auditTime}, #{otherReason}, #{auditComment})
    </insert>

    <update id="update" parameterMap="paramMap">

        update stu_leave
        <set>
            updated_at = now(),
            <if test="studentId !=null and studentId !=''">student_id = #{studentId},</if>
            <if test="reason !=null and reason !=''">reason = #{reason},</if>
            <if test="startTime !=null and startTime !=''">start_time = str_to_date(#{startTime}, '%Y-%m-%d %H:%i:%S'),</if>
            <if test="endTime !=null and endTime !=''">end_time =str_to_date({endTime},'%Y-%m-%d %H:%i:%S'),</if>
            <if test="auditTeacherId !=null and auditTeacherId !=''">audit_teacher_id = #{auditTeacherId},</if>
            <if test="auditStatus !=null and auditStatus !=''">audit_status = #{auditStatus},</if>
            <if test="auditResult !=null and auditResult !=''">audit_result = #{auditResult},</if>
            <if test="auditTime !=null and auditTime !=''">audit_time =str_to_date(#{auditTime},'%Y-%m-%d %H:%i:%S'),</if>
            <if test="otherReason !=null and otherReason !=''">other_reason = #{otherReason},</if>
            <if test="auditComment !=null and auditComment !=''">audit_comment = #{auditComment},</if>

        </set>
        where id = #{id}
    </update>
    <delete id="delete" parameterMap="paramMap">
        delete from stu_leave
        where id = #{id}
    </delete>

</mapper>