<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.creditmanage.base.address.AddressMapper">

    <parameterMap id="paramMap" type="com.creditmanage.base.address.Address"/>
    <resultMap id="resultMap" type="com.creditmanage.base.address.Address"/>

    <sql id="selectAll">
        select t1.id                                           as id,
               date_format(t1.created_at, '%Y-%m-%d %H:%i:%S') as createdAt,
               date_format(t1.updated_at, '%Y-%m-%d %H:%i:%S') as updatedAt,
               t1.name                                         as name,
               t1.pid                                          as pid,
               t1.deep                                         as deep,
               t1.spell                                        as spell,
               t1.ext_id                                       as extId,
               t1.ext_name                                     as extName
    </sql>
    <sql id="fromAll">
        from pl_address t1
    </sql>
    <sql id="whereAll">
        <foreach collection="query.filters" open="where 1=1 " item="item">
            ${item.getFilterSql()}
        </foreach>
    </sql>
    <sql id="orderAll">
        <!--<if test="query.orders.size()>0">-->
        <foreach collection="query.orders" open="order by" item="item" separator=",">
            ${item.field} ${item.orderVal()}
        </foreach>
        <!--</if>-->
    </sql>

    <select id="queryOne" resultMap="resultMap" parameterMap="paramMap">
        <include refid="selectAll"/>
        <include refid="fromAll"/>
        where t1.id = #{id}
    </select>

    <select id="queryAll" resultMap="resultMap" parameterMap="paramMap">
        select * from (
        <include refid="selectAll"/>
        <include refid="fromAll"/>
        ) as temp
        <include refid="whereAll"/>
        <include refid="orderAll"/>
    </select>

    <select id="queryPage" resultMap="resultMap" parameterMap="paramMap">
        select * from (
        <include refid="selectAll"/>
        <include refid="fromAll"/>
        ) as temp
        <include refid="whereAll"/>
        <include refid="orderAll"/>
        limit ${(query.page-1)*query.pageSize},${query.pageSize}
    </select>

    <select id="queryCount" resultType="java.lang.Integer" parameterMap="paramMap">
        select count(1) from (
        <include refid="selectAll"/>
        <include refid="fromAll"/>
        ) as temp
        <include refid="whereAll"/>
    </select>

    <insert id="insert" parameterMap="paramMap">
        insert into pl_address
            (id, created_at, updated_at, name, pid, deep, spell, ext_id, ext_name)
            value
            (#{id}, now(), now(), #{name}, #{pid}, #{deep}, #{spell}, #{extId}, #{extName})
    </insert>

    <update id="update" parameterMap="paramMap">
        update pl_address
        <set>
            updated_at = now(),
            <if test="name !=null and name !=''">name = #{name},</if>
            <if test="pid !=null and pid !=''">pid = #{pid},</if>
            <if test="deep !=null and deep !=''">deep = #{deep},</if>
            <if test="spell !=null and spell !=''">spell = #{spell},</if>
            <if test="extId !=null and extId !=''">ext_id = #{extId},</if>
            <if test="extName !=null and extName !=''">ext_name = #{extName},</if>
        </set>
        where id = #{id}
    </update>
    <delete id="delete" parameterMap="paramMap">
        delete
        from pl_address
        where id = #{id}
    </delete>

</mapper>